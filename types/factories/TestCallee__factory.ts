/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestCallee, TestCalleeInterface } from "../TestCallee";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coll",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    name: "LiquidateCallback",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "coll",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "liquidateCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610270806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806386b9d81f1461003b578063ede9d9731461006b575b600080fd5b6100696004803603604081101561005157600080fd5b506001600160a01b03813581169160200135166100e7565b005b6100696004803603606081101561008157600080fd5b8135916020810135918101906060810160408201356401000000008111156100a857600080fd5b8201836020820111156100ba57600080fd5b803590602001918460018302840111640100000000831117156100dc57600080fd5b5090925090506101d1565b6040805133602080830191909152825180830382018152828401808552630eccd2c960e01b90526001600160a01b03858116604485019081526064850195865282516084860152825191881695630eccd2c99588959293919260a4909101919085019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156101b557600080fd5b505af11580156101c9573d6000803e3d6000fd5b505050505050565b6000828260208110156101e357600080fd5b506040805191356001600160a01b03168083526020830188905282820187905290519092507f7b5a67fc6231a953640de6cb8b60da462cf383e1fe1938d609423da965688f30916060908290030190a1505050505056fea26469706673582212204f3ddbe275ebeb169dbf1fc6470107f98f719583371154689178aeae9c967d2764736f6c63430007060033";

export class TestCallee__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCallee> {
    return super.deploy(overrides || {}) as Promise<TestCallee>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestCallee {
    return super.attach(address) as TestCallee;
  }
  connect(signer: Signer): TestCallee__factory {
    return super.connect(signer) as TestCallee__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCalleeInterface {
    return new utils.Interface(_abi) as TestCalleeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCallee {
    return new Contract(address, _abi, signerOrProvider) as TestCallee;
  }
}
