/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lender, LenderInterface } from "../Lender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "nusd",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPositionCollateralizationRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSystemCollateralizationRatio",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "Liquidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coll",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "_actualColl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_actualDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_collateral",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minPositionCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minSystemCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_nusd",
    outputs: [
      {
        internalType: "contract INUSD",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_openedColl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_openedDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_positions",
    outputs: [
      {
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coll",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "positionOf",
    outputs: [
      {
        internalType: "uint256",
        name: "coll",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minDebt",
        type: "uint256",
      },
    ],
    name: "setMinDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minPositionCollateralizationRatio",
        type: "uint256",
      },
    ],
    name: "setMinPositionCollateralizationRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minSystemCollateralizationRatio",
        type: "uint256",
      },
    ],
    name: "setMinSystemCollateralizationRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "totalCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "collDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "debtDelta",
        type: "int256",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018f3380380620018f383398181016040526101008110156200003857600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e0909701519596949593949293919290916000620000776200011a565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620018d3833981519152908290a350600180546001600160a01b03808a166001600160a01b03199283161790925560028054898416908316179055600380549288169290911691909117905560048490556005839055600682905560078190556200010c886200011e565b505050505050505062000237565b3390565b620001286200011a565b6001600160a01b03166200013b62000228565b6001600160a01b03161462000197576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620001de5760405162461bcd60e51b8152600401808060200182810382526026815260200180620018ad6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020620018d383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b61166680620002476000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063c0c8fb801161007c578063c0c8fb8014610306578063c5b37c2214610345578063f2fde38b1461034d578063f356533d14610373578063f79649a21461037b578063fd2d39c5146103835761014d565b8063715018a6146102c15780637bd46d05146102c95780638da5cb5b146102d1578063a9c75c82146102d9578063acd38d2a146102e1578063b598f9b4146102fe5761014d565b80634c2e9c1d116101155780634c2e9c1d1461024057806359d0bf2d1461025a5780635abeea75146102625780636234dc211461026a57806367d640481461028757806369fe0e2d146102a45761014d565b8063046a4e7d146101525780630eccd2c9146101765780631a3f98b1146101f8578063247ac0631461021b57806346115f8e14610223575b600080fd5b61015a6103a9565b604080516001600160a01b039092168252519081900360200190f35b6101f66004803603604081101561018c57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b757600080fd5b8201836020820111156101c957600080fd5b803590602001918460018302840111640100000000831117156101eb57600080fd5b5090925090506103b8565b005b6101f66004803603604081101561020e57600080fd5b50803590602001356106cf565b61015a610b27565b6101f66004803603602081101561023957600080fd5b5035610b36565b610248610b9d565b60408051918252519081900360200190f35b610248610ba3565b610248610ba9565b6101f66004803603602081101561028057600080fd5b5035610baf565b6102486004803603602081101561029d57600080fd5b5035610c16565b6101f6600480360360208110156102ba57600080fd5b5035610c2d565b6101f6610c94565b610248610d40565b61015a610d46565b610248610d55565b6101f6600480360360208110156102f757600080fd5b5035610d5b565b61015a610dc2565b61032c6004803603602081101561031c57600080fd5b50356001600160a01b0316610dd1565b6040805192835260208301919091528051918290030190f35b610248610dea565b6101f66004803603602081101561036357600080fd5b50356001600160a01b0316610df0565b610248610ef2565b610248610ef8565b61032c6004803603602081101561039957600080fd5b50356001600160a01b0316610efe565b6002546001600160a01b031681565b6000806103c485610efe565b915091508060001415610415576040805162461bcd60e51b81526020600482015260146024820152731c1bdcda5d1a5bdb881a185cc81b9bc81919589d60621b604482015290519081900360640190fd5b6003546040805163053f1e3f60e21b815290516000926001600160a01b0316916314fc78fc916004808301926020929190829003018186803b15801561045a57600080fd5b505afa15801561046e573d6000803e3d6000fd5b505050506040513d602081101561048457600080fd5b5051905061049c81610497858583610f8b565b610faf565b6104e3576040805162461bcd60e51b815260206004820152601360248201527234b73b30b634b2103634b8bab4b230ba34b7b760691b604482015290519081900360640190fd5b6001546104fa906001600160a01b03163385610fd7565b336001600160a01b031663ede9d973848488886040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561057c57600080fd5b505af1158015610590573d6000803e3d6000fd5b5050600b546105a2925090508361102e565b600b55600a546105b2908461102e565b600a556001600160a01b0386166000908152600c60205260409020600101546008546105dd9161102e565b6008556001600160a01b0386166000908152600c60205260409020546009546106059161102e565b6009556001600160a01b038087166000908152600c60205260408082208281556001018290556002548151632770a7eb60e21b8152336004820152602481018790529151931692639dc29fac9260448084019391929182900301818387803b15801561067057600080fd5b505af1158015610684573d6000803e3d6000fd5b50506040805133815290516001600160a01b038a1693507fc3d81b2125598b9a2b024afe09e33981f0aa5b7bcbe3e30c4303a4dec209ddb492509081900360200190a2505050505050565b811515806106dc57508015155b61071b576040805162461bcd60e51b815260206004820152600b60248201526a6e6f6f702075706461746560a81b604482015290519081900360640190fd5b60008061072733610efe565b90925090506000610738838661103e565b90506000610746838661103e565b600854909150610756908761103e565b600855600954610766908661103e565b600955600a54610776908761103e565b600a55600b54610786908661103e565b600b5581158015610795575080155b1561087a57336000818152600c60205260408082208281556001018290556002548151632770a7eb60e21b81526004810194909452888303602485015290516001600160a01b0390911692639dc29fac92604480830193919282900301818387803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b505060015461083792506001600160a01b03169050336000899003610fd7565b6040805160008082526020820152815133927f5429acfa1bb2f4dabe79b6340b7d91d801c2d985aabad7148c2476bbd9421cf8928290030190a250505050610b23565b600085131561093a576004546108919082906110cc565b90506108aa6004546009546110cc90919063ffffffff16565b600955600454600b546108bc916110cc565b600b556002546001600160a01b03166340c10f196108d8610d46565b6004546040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561092157600080fd5b505af1158015610935573d6000803e3d6000fd5b505050505b61094482826110dc565b610995576040805162461bcd60e51b815260206004820152601c60248201527f756e646572636f6c6c61746572616c697a656420706f736974696f6e00000000604482015290519081900360640190fd5b336000908152600c6020526040812060018101849055829055851215610a255760025460408051632770a7eb60e21b81523360048201526000888103602483015291516001600160a01b0390931692639dc29fac9260448084019391929182900301818387803b158015610a0857600080fd5b505af1158015610a1c573d6000803e3d6000fd5b50505050610a9a565b6000851315610a9a57600254604080516340c10f1960e01b81523360048201526024810188905290516001600160a01b03909216916340c10f199160448082019260009290919082900301818387803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b505050505b6000861215610ac357600154610abe906001600160a01b0316336000899003610fd7565b610ae4565b6000861315610ae457600154610ae4906001600160a01b0316333089611218565b6040805183815260208101839052815133927f5429acfa1bb2f4dabe79b6340b7d91d801c2d985aabad7148c2476bbd9421cf8928290030190a2505050505b5050565b6003546001600160a01b031681565b610b3e611278565b6001600160a01b0316610b4f610d46565b6001600160a01b031614610b98576040805162461bcd60e51b815260206004820181905260248201526000805160206115e7833981519152604482015290519081900360640190fd5b600655565b60065481565b60055481565b60075481565b610bb7611278565b6001600160a01b0316610bc8610d46565b6001600160a01b031614610c11576040805162461bcd60e51b815260206004820181905260248201526000805160206115e7833981519152604482015290519081900360640190fd5b600555565b6000610c27600a54600b5484610f8b565b92915050565b610c35611278565b6001600160a01b0316610c46610d46565b6001600160a01b031614610c8f576040805162461bcd60e51b815260206004820181905260248201526000805160206115e7833981519152604482015290519081900360640190fd5b600455565b610c9c611278565b6001600160a01b0316610cad610d46565b6001600160a01b031614610cf6576040805162461bcd60e51b815260206004820181905260248201526000805160206115e7833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60095481565b6000546001600160a01b031690565b60085481565b610d63611278565b6001600160a01b0316610d74610d46565b6001600160a01b031614610dbd576040805162461bcd60e51b815260206004820181905260248201526000805160206115e7833981519152604482015290519081900360640190fd5b600755565b6001546001600160a01b031681565b600c602052600090815260409020805460019091015482565b60045481565b610df8611278565b6001600160a01b0316610e09610d46565b6001600160a01b031614610e52576040805162461bcd60e51b815260206004820181905260248201526000805160206115e7833981519152604482015290519081900360640190fd5b6001600160a01b038116610e975760405162461bcd60e51b81526004018080602001828103825260268152602001806115c16026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600b5481565b600a5481565b6001600160a01b0381166000908152600c60205260408120600101548190610f2b57506000905080610f86565b6001600160a01b0383166000908152600c6020526040902060010154600a54600854610f5892919061127c565b6001600160a01b0384166000908152600c6020526040902054600b54600954929450610f839261127c565b90505b915091565b600082610f9a57506000610fa8565b610fa584838561127c565b90505b9392505050565b6000610fba8361132b565b8015610fc7575060075482105b80610fa857505060065411919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611029908490611340565b505050565b80820382811115610c2757600080fd5b60008082121561108e578282600003840391508110611089576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b610c27565b5080820182811015610c27576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b80820182811015610c2757600080fd5b600060055482101561112a576040805162461bcd60e51b81526020600482015260126024820152711b195cdcc81d1a185b881b5a5b881919589d60721b604482015290519081900360640190fd5b6003546040805163053f1e3f60e21b815290516000926001600160a01b0316916314fc78fc916004808301926020929190829003018186803b15801561116f57600080fd5b505afa158015611183573d6000803e3d6000fd5b505050506040513d602081101561119957600080fd5b5051905060006111aa858584610f8b565b90506007546111be600a54600b5485610f8b565b10156111d35760075481101592505050610c27565b600754600a546111fa906111e790886110cc565b600b546111f490886110cc565b85610f8b565b101561120b57600092505050610c27565b6006541115949350505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611272908590611340565b50505050565b3390565b60008080600019858709868602925082811090839003039050806112b257600084116112a757600080fd5b508290049050610fa8565b8084116112be57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600060075461133983610c16565b1092915050565b6000611395826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113f19092919063ffffffff16565b805190915015611029578080602001905160208110156113b457600080fd5b50516110295760405162461bcd60e51b815260040180806020018281038252602a815260200180611607602a913960400191505060405180910390fd5b6060610fa584846000858561140585611516565b611456576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106114945780518252601f199092019160209182019101611475565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114f6576040519150601f19603f3d011682016040523d82523d6000602084013e6114fb565b606091505b509150915061150b82828661151c565b979650505050505050565b3b151590565b6060831561152b575081610fa8565b82511561153b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561158557818101518382015260200161156d565b50505050905090810190601f1680156115b25780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220a362a88c55207f708443e48059719ca80367c95a40032ca0987fe3d2e4f0678364736f6c634300070600334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class Lender__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    owner: string,
    collateral: string,
    nusd: string,
    oracle: string,
    fee: BigNumberish,
    minDebt: BigNumberish,
    minPositionCollateralizationRatio: BigNumberish,
    minSystemCollateralizationRatio: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lender> {
    return super.deploy(
      owner,
      collateral,
      nusd,
      oracle,
      fee,
      minDebt,
      minPositionCollateralizationRatio,
      minSystemCollateralizationRatio,
      overrides || {}
    ) as Promise<Lender>;
  }
  getDeployTransaction(
    owner: string,
    collateral: string,
    nusd: string,
    oracle: string,
    fee: BigNumberish,
    minDebt: BigNumberish,
    minPositionCollateralizationRatio: BigNumberish,
    minSystemCollateralizationRatio: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      collateral,
      nusd,
      oracle,
      fee,
      minDebt,
      minPositionCollateralizationRatio,
      minSystemCollateralizationRatio,
      overrides || {}
    );
  }
  attach(address: string): Lender {
    return super.attach(address) as Lender;
  }
  connect(signer: Signer): Lender__factory {
    return super.connect(signer) as Lender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LenderInterface {
    return new utils.Interface(_abi) as LenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lender {
    return new Contract(address, _abi, signerOrProvider) as Lender;
  }
}
