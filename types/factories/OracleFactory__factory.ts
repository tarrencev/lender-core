/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleFactory, OracleFactoryInterface } from "../OracleFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ethusdOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_ethusdOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class OracleFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    ethusdOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleFactory> {
    return super.deploy(
      ethusdOracle,
      overrides || {}
    ) as Promise<OracleFactory>;
  }
  getDeployTransaction(
    ethusdOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ethusdOracle, overrides || {});
  }
  attach(address: string): OracleFactory {
    return super.attach(address) as OracleFactory;
  }
  connect(signer: Signer): OracleFactory__factory {
    return super.connect(signer) as OracleFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleFactoryInterface {
    return new utils.Interface(_abi) as OracleFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleFactory {
    return new Contract(address, _abi, signerOrProvider) as OracleFactory;
  }
}
