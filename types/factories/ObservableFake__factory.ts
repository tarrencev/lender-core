/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ObservableFake,
  ObservableFakeInterface,
} from "../ObservableFake";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "secondsAgos",
        type: "uint32[]",
      },
    ],
    name: "observe",
    outputs: [
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160[]",
        name: "secondsPerLiquidityCumulativeX128s",
        type: "uint160[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "secondsAgos",
        type: "uint32[]",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160[]",
        name: "secondsPerLiquidityCumulativeX128s",
        type: "uint160[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610705806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063883bdbfd1461003b5780639558ccd914610142575b600080fd5b6100a96004803603602081101561005157600080fd5b810190602081018135600160201b81111561006b57600080fd5b82018360208201111561007d57600080fd5b803590602001918460208302840111600160201b8311171561009e57600080fd5b5090925090506102e9565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156100ed5781810151838201526020016100d5565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561012c578181015183820152602001610114565b5050505090500194505050505060405180910390f35b6102e76004803603606081101561015857600080fd5b810190602081018135600160201b81111561017257600080fd5b82018360208201111561018457600080fd5b803590602001918460208302840111600160201b831117156101a557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101f457600080fd5b82018360208201111561020657600080fd5b803590602001918460208302840111600160201b8311171561022757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561027657600080fd5b82018360208201111561028857600080fd5b803590602001918460208302840111600160201b831117156102a957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506104a7945050505050565b005b60008054606091829163ffffffff1690859085908161030457fe5b9050602002013563ffffffff1663ffffffff1614801561034c57506001805463ffffffff16908590859081811061033757fe5b9050602002013563ffffffff1663ffffffff16145b610391576040805162461bcd60e51b8152602060048201526011602482015270496e76616c69642074657374206361736560781b604482015290519081900360640190fd5b6040805160028082526060820183526000926020830190803683375050600080548351939450600160201b900460060b928492506103cb57fe5b600692830b830b6020918202929092010152600180548351600160201b90910490920b9183919081106103fa57fe5b600692830b90920b60209283029190910182015260408051600280825260608201835260009391929091830190803683375050600080548351939450600160581b90046001600160a01b03169284925061045057fe5b6001600160a01b039283166020918202929092010152600180548351600160581b90910490921691839190811061048357fe5b6001600160a01b039092166020928302919091019091015290925090509250929050565b825160021480156104b9575081516002145b80156104c6575080516002145b610510576040805162461bcd60e51b8152602060048201526016602482015275496e76616c6964207465737420636173652073697a6560501b604482015290519081900360640190fd5b60405180606001604052808460008151811061052857fe5b602002602001015163ffffffff1681526020018360008151811061054857fe5b602002602001015160060b81526020018260008151811061056557fe5b6020908102919091018101516001600160a01b0390811690925282516000805492850151604095860151909416600160581b02600160581b600160f81b031960069590950b66ffffffffffffff16600160201b026affffffffffffff000000001963ffffffff90941663ffffffff1990951694909417929092169290921792909216919091179055805160608101909152835181908590600190811061060757fe5b602002602001015163ffffffff1681526020018360018151811061062757fe5b602002602001015160060b81526020018260018151811061064457fe5b6020908102919091018101516001600160a01b039081169092528251600180549285015160409095015163ffffffff1990931663ffffffff909216919091176affffffffffffff000000001916600160201b66ffffffffffffff60069690960b959095169490940293909317600160581b600160f81b031916600160581b919092160217905550505056fea2646970667358221220051064c381046584dc0a35a9799c7fafb769e6648f80e31ea95e6866a9f3ad9964736f6c63430007060033";

export class ObservableFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ObservableFake> {
    return super.deploy(overrides || {}) as Promise<ObservableFake>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ObservableFake {
    return super.attach(address) as ObservableFake;
  }
  connect(signer: Signer): ObservableFake__factory {
    return super.connect(signer) as ObservableFake__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ObservableFakeInterface {
    return new utils.Interface(_abi) as ObservableFakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ObservableFake {
    return new Contract(address, _abi, signerOrProvider) as ObservableFake;
  }
}
