/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LenderTest, LenderTestInterface } from "../LenderTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "address",
        name: "nusd",
        type: "address",
      },
      {
        internalType: "address",
        name: "ethusdOracle_",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "oraclePoolFee_",
        type: "uint24",
      },
      {
        internalType: "uint32",
        name: "oraclePeriod_",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDebt_",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "minBCR_",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "minLCR_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "Liquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coll",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [],
    name: "UNISWAP_V3_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_collateral",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ethusdOracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minBCR",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minLCR",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_nusd",
    outputs: [
      {
        internalType: "contract INUSD",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_oraclePeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_oraclePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_positions",
    outputs: [
      {
        internalType: "uint128",
        name: "coll",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "debt",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "coll",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "debt",
            type: "int256",
          },
        ],
        internalType: "struct Update.Info",
        name: "u",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lNominal",
    outputs: [
      {
        internalType: "uint128",
        name: "coll",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "debt",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lReal",
    outputs: [
      {
        internalType: "uint128",
        name: "coll",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "debt",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "observe",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "positionOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "coll",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "debt",
            type: "uint128",
          },
        ],
        internalType: "struct Position.Info",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minDebt",
        type: "uint256",
      },
    ],
    name: "setMinDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "minBCR",
        type: "uint128",
      },
    ],
    name: "setMinPositionCollateralizationRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "minLCR",
        type: "uint128",
      },
    ],
    name: "setMinSystemCollateralizationRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "period",
        type: "uint32",
      },
    ],
    name: "setOraclePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "totalCollateralizationRatio",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "coll",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "debt",
            type: "int256",
          },
        ],
        internalType: "struct Update.Info",
        name: "uReal",
        type: "tuple",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200281c3803806200281c83398101604081905262000034916200031a565b60008054336001600160a01b03199182161790915560016002556003805482166001600160a01b038d8116919091179091556004805483168c831617905560058054909216908a161790556006805463ffffffff60a01b1916600160a01b63ffffffff891602179055898989898989898989620000fd731f98431c8ad98523631ae4a59f267346ea31f984620000ec8b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28a62000174602090811b6200148b17901c565b620001cd60201b620014ed1760201c565b60068054600796909655600894909455600980546001600160801b03938416600160801b029484166001600160801b0319909116179092169290921790556001600160a01b0398891698166001600160a01b0319928316179091169690961790955550620003e99c50505050505050505050505050565b6200017e620002c5565b826001600160a01b0316846001600160a01b031611156200019d579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610620001f657600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6001600160601b03191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b80516001600160a01b0381168114620002fd57600080fd5b919050565b80516001600160801b0381168114620002fd57600080fd5b6000806000806000806000806000806101408b8d0312156200033a578586fd5b620003458b620002e5565b99506200035560208c01620002e5565b98506200036560408c01620002e5565b975060608b015162ffffff811681146200037d578687fd5b60808c015190975063ffffffff8116811462000397578687fd5b60a08c015160c08d015191975095509350620003b660e08c0162000302565b9250620003c76101008c0162000302565b9150620003d86101208c01620002e5565b90509295989b9194979a5092959850565b61242380620003f96000396000f3fe608060405234801561001057600080fd5b50600436106101bb5760003560e01c806369fe0e2d116100fa578063b598f9b41161009d578063b598f9b41461035c578063c0c8fb8014610364578063c5b37c2214610377578063d3b837581461037f578063dc3e030414610387578063dc5fb25d1461038f578063ebbc496514610397578063f73e5aab1461039f578063fd2d39c5146103a7576101bb565b806369fe0e2d146102e35780637183634f146102f65780637adbf9731461030b5780638da5cb5b1461031e57806391b7f5ed14610326578063927754c814610339578063a19d5cca1461034c578063b2bdfa7b14610354576101bb565b80633599294b116101625780633599294b1461025f57806339b37ab0146102725780633f5ce5d11461028557806351fda3811461028d57806359d0bf2d146102a05780635fb58080146102a85780636234dc21146102bd57806367d64048146102d0576101bb565b8063040141e5146101c0578063046a4e7d146101de5780630eccd2c9146101e657806313af4035146101fb57806314fc78fc1461020e5780631a373734146102235780631d4d957c1461023957806322ec40651461024c575b600080fd5b6101c86103c7565b6040516101d591906120f5565b60405180910390f35b6101c86103df565b6101f96101f4366004611fb5565b6103ee565b005b6101f9610209366004611f9b565b6107df565b610216610848565b6040516101d59190612144565b61022b61084e565b6040516101d592919061234f565b6101f96102473660046120d1565b610868565b6101f961025a366004612092565b6108d5565b6101f961026d366004612092565b61093e565b6102166102803660046120b9565b6109a4565b6101c8610a96565b6101f961029b36600461204a565b610aa5565b610216610fdf565b6102b0610fe5565b6040516101d5919061233b565b6101f96102cb3660046120b9565b610ffb565b6102166102de3660046120b9565b611047565b6101f96102f13660046120b9565b611082565b6102fe6110ce565b6040516101d591906123b2565b6101f9610319366004611f9b565b6110e1565b6101c861114a565b6101f96103343660046120b9565b611159565b6101f9610347366004612033565b61115e565b6102b06112b7565b6101c86112c6565b6101c86112d5565b61022b610372366004611f9b565b6112e4565b61021661130a565b6101c8611310565b6101c861131f565b61022b61132e565b6101f9611348565b6101c86113aa565b6103ba6103b5366004611f9b565b6113c2565b6040516101d59190612318565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6004546001600160a01b031681565b600a546001600160801b0316158015906104195750600a54600160801b90046001600160801b031615155b61043e5760405162461bcd60e51b81526004016104359061215b565b60405180910390fd5b600280541415610495576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600280556001600160a01b0383166000908152600c60209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082018190526104f65760405162461bcd60e51b8152600401610435906122b3565b604080518082018252600a546001600160801b038082168352600160801b9182900481166020808501919091528451808601909552600b54808316865292909204169083015260009161054a9184916115d1565b90506000610556610848565b905061056b816105668482611685565b61169a565b6105875760405162461bcd60e51b8152600401610435906121e7565b81516003546105ac916001600160a01b039091169033906001600160801b03166116db565b8151602083015160405163ede9d97360e01b8152339263ede9d973926105d8928a908a90600401612369565b600060405180830381600087803b1580156105f257600080fd5b505af1158015610606573d6000803e3d6000fd5b50505050610652604051806040016040528084600001516001600160801b0316600003815260200184602001516001600160801b0316600003815250600b61172d90919063ffffffff16565b61069a604051806040016040528085600001516001600160801b0316600003815260200185602001516001600160801b0316600003815250600a61172d90919063ffffffff16565b6001600160a01b0386166000908152600c6020526040812055600a546001600160801b0316158015906106de5750600a54600160801b90046001600160801b031615155b8061070d5750600a546001600160801b031615801561070d5750600a54600160801b90046001600160801b0316155b6107295760405162461bcd60e51b815260040161043590612270565b600480546020840151604051632770a7eb60e21b81526001600160a01b0390921692639dc29fac9261075f923392909101612109565b600060405180830381600087803b15801561077957600080fd5b505af115801561078d573d6000803e3d6000fd5b50505050856001600160a01b03167facd74f5a0eb0d086de0eebe2d1e70d5742838c88cb2cf492fc201d39e056f7e0336040516107ca91906120f5565b60405180910390a25050600160025550505050565b6000546001600160a01b03163314610826576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600d5490565b600a546001600160801b0380821691600160801b90041682565b6000546001600160a01b031633146108af576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b6006805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b6000546001600160a01b0316331461091c576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600980546001600160801b0319166001600160801b0392909216919091179055565b6000546001600160a01b03163314610985576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600980546001600160801b03928316600160801b029216919091179055565b600954600090600160801b90046001600160801b031682106109c857506000610a91565b6009546001600160801b03168210156109e45750600754610a91565b600954600090610a0d90600160801b90046001600160801b0316610a07856117ad565b906117c3565b600954909150610a33906001600160801b03600160801b8204811691610a0791166117ad565b8113610a43575050600754610a91565b600754600954600091610a8191610a6c906001600160801b03600160801b8204811691166117d9565b8460000381610a7757fe5b04600103906117e9565b905060008111610a8d57fe5b9150505b919050565b6005546001600160a01b031681565b600a546001600160801b031615801590610ad05750600a54600160801b90046001600160801b031615155b610aec5760405162461bcd60e51b81526004016104359061215b565b600280541415610b43576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600280558051151580610b595750602081015115155b610b755760405162461bcd60e51b81526004016104359061224b565b6000610b82600c3361180d565b9050610b8c611f33565b60408051808201825283546001600160801b038082168352600160801b91829004811660208085019190915284518086018652600b5480841682528490048316818301528551808701909652600a5480841687529390930490911690840152610bf89286929190611828565b93509050610c07600b8461172d565b610c12600a8261172d565b610c1c828261172d565b81546001600160801b0316158015610c4357508154600160801b90046001600160801b0316155b15610cdd57336000908152600c60209081526040822091909155830151600454610c78916001600160a01b039091169061188f565b8251600354610c92916001600160a01b0390911690611976565b336001600160a01b03167f99cc044fd36aeecc372e0e5efa3b9fb561c7bd355a7c7de464a05776716b1476600080604051610cce92919061214d565b60405180910390a25050610fd7565b6000610ce7610848565b6040805180820190915284546001600160801b038082168352600160801b909104166020820152909150600090610d1e9083611685565b600954909150600090600160801b90046001600160801b0316821215610e3557610d4f610d4a836109a4565b6117ad565b9050610d79604051806040016040528060008152602001838152508661172d90919063ffffffff16565b610da260405180604001604052806000815260200183815250600a61172d90919063ffffffff16565b610dcb60405180604001604052806000815260200183815250600b61172d90919063ffffffff16565b6004546001600160a01b03166340c10f19610de461114a565b836040518363ffffffff1660e01b8152600401610e0292919061212b565b600060405180830381600087803b158015610e1c57600080fd5b505af1158015610e30573d6000803e3d6000fd5b505050505b6008548554600160801b90046001600160801b03161015610e685760405162461bcd60e51b815260040161043590612184565b6040805180820190915285546001600160801b038082168352600160801b909104166020820152610e999084611685565b60095460408051808201909152600b546001600160801b038082168352600160801b918290048116602084015293955090910490911690610eda9085611685565b1215610f1757600954600160801b90046001600160801b0316821215610f125760405162461bcd60e51b815260040161043590612214565b610f42565b6009546001600160801b0316821215610f425760405162461bcd60e51b8152600401610435906122e1565b6020860151610f6790610f5590836117c3565b6004546001600160a01b03169061188f565b8551600354610f81916001600160a01b0390911690611976565b845460405133917f99cc044fd36aeecc372e0e5efa3b9fb561c7bd355a7c7de464a05776716b147691610fc9916001600160801b0380821692600160801b909204169061234f565b60405180910390a250505050505b506001600255565b60085481565b600954600160801b90046001600160801b031681565b6000546001600160a01b03163314611042576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600855565b60408051808201909152600b546001600160801b038082168352600160801b90910416602082015260009061107c9083611685565b92915050565b6000546001600160a01b031633146110c9576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600755565b600654600160a01b900463ffffffff1681565b6000546001600160a01b03163314611128576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b600d55565b6000546001600160a01b031633146111a5576040805162461bcd60e51b815260206004820152600560248201526437bbb732b960d91b604482015290519081900360640190fd5b600a546001600160801b0316156111bb576112b4565b60006111c8600c3361180d565b90506111e46111dc3684900384018461204a565b600b9061172d565b6111fe6111f63684900384018461204a565b600a9061172d565b6112176112103684900384018461204a565b829061172d565b6000611221610848565b60095460408051808201909152600b546001600160801b038082168352600160801b9182900481166020840152939450909104909116906112629083611685565b12156112805760405162461bcd60e51b8152600401610435906121b0565b60045461129a906001600160a01b0316602085013561188f565b6003546112b1906001600160a01b03168435611976565b50505b50565b6009546001600160801b031681565b6000546001600160a01b031681565b6003546001600160a01b031681565b600c602052600090815260409020546001600160801b0380821691600160801b90041682565b60075481565b6001546001600160a01b031681565b6006546001600160a01b031681565b600b546001600160801b0380821691600160801b90041682565b6001546001600160a01b03163314611396576040805162461bcd60e51b815260206004820152600c60248201526b3832b73234b733a7bbb732b960a11b604482015290519081900360640190fd5b600080546001600160a01b03191633179055565b731f98431c8ad98523631ae4a59f267346ea31f98481565b6113ca611f4d565b6001600160a01b0382166000908152600c60205260409020546001600160801b031661140a57506040805180820190915260008082526020820152610a91565b6001600160a01b0382166000908152600c60209081526040918290208251808401845290546001600160801b038082168352600160801b9182900481168385015284518086018652600a5480831682528390048216818601528551808701909652600b54808316875292909204169284019290925261107c929091906115d1565b611493611f64565b826001600160a01b0316846001600160a01b031611156114b1579192915b6040518060600160405280856001600160a01b03168152602001846001600160a01b031681526020018362ffffff1681525090505b9392505050565b600081602001516001600160a01b031682600001516001600160a01b03161061151557600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b6115d9611f4d565b600061160d85600001516001600160801b031684600001516001600160801b031686600001516001600160801b03166119ba565b9050600061164386602001516001600160801b031685602001516001600160801b031687602001516001600160801b03166119ba565b9050604051806040016040528061165984611a69565b6001600160801b0316815260200161167083611a69565b6001600160801b031690529695505050505050565b60006114e68360000151846020015184611a7f565b60006116a583611abc565b80156116c25750600954600160801b90046001600160801b031682125b806114e65750506009546001600160801b031613919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526112b1908490611ae2565b6040805180820190915282546001600160801b03808216808452600160801b90920416602083015282516117619190611b93565b83546001600160801b0319166001600160801b0391821617845560208381015190830151611790921690611b93565b83546001600160801b03918216600160801b029116179092555050565b6000600160ff1b82106117bf57600080fd5b5090565b8082038281131560008312151461107c57600080fd5b8082018281101561107c57600080fd5b60008215806118045750508181028183828161180157fe5b04145b61107c57600080fd5b6001600160a01b031660009081526020919091526040902090565b611830611f33565b611838611f33565b611840611f33565b865186518551875161185493929190611c46565b885281526020808801518782015186830151928801516118749390611c46565b60208981019190915282015291508590505b94509492505050565b60008112156119025760408051632770a7eb60e21b81523360048201526000838103602483015291516001600160a01b03851692639dc29fac926044808201939182900301818387803b1580156118e557600080fd5b505af11580156118f9573d6000803e3d6000fd5b50505050611972565b600081131561197257604080516340c10f1960e01b81523360048201526024810183905290516001600160a01b038416916340c10f1991604480830192600092919082900301818387803b15801561195957600080fd5b505af115801561196d573d6000803e3d6000fd5b505050505b5050565b600081121561199c576119976001600160a01b0383163360008490036116db565b611972565b6000811315611972576119726001600160a01b038316333084611d04565b60008080600019858709868602925082811090839003039050806119f057600084116119e557600080fd5b5082900490506114e6565b8084116119fc57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b806001600160801b0381168114610a9157600080fd5b60006001600160801b038316611a97575060006114e6565b611ab4846001600160801b031683856001600160801b03166119ba565b949350505050565b600954600090600160801b90046001600160801b0316611adb83611047565b1292915050565b6000611b37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d649092919063ffffffff16565b8051909150156112b157808060200190516020811015611b5657600080fd5b50516112b15760405162461bcd60e51b815260040180806020018281038252602a8152602001806123c4602a913960400191505060405180910390fd5b600080821215611bf557826001600160801b03168260000384039150816001600160801b031610611bf0576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b61107c565b826001600160801b03168284019150816001600160801b0316101561107c576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60008481811215611cd357611c7a816000036001600160801b0316856001600160801b0316856001600160801b03166119ba565b6000039150846001600160801b0316826000031315611cce57846001600160801b03166000039150611cc8856001600160801b0316846001600160801b0316866001600160801b03166119ba565b60000390505b611886565b611cf9816001600160801b0316856001600160801b0316856001600160801b03166119ba565b915094509492505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611d5e908590611ae2565b50505050565b6060611ab4848460008585611d7885611e89565b611dc9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611e075780518252601f199092019160209182019101611de8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611e69576040519150601f19603f3d011682016040523d82523d6000602084013e611e6e565b606091505b5091509150611e7e828286611e8f565b979650505050505050565b3b151590565b60608315611e9e5750816114e6565b825115611eae5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611ef8578181015183820152602001611ee0565b50505050905090810190601f168015611f255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b604051806040016040528060008152602001600081525090565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b0381168114610a9157600080fd5b600060208284031215611fac578081fd5b6114e682611f84565b600080600060408486031215611fc9578182fd5b611fd284611f84565b9250602084013567ffffffffffffffff80821115611fee578384fd5b818601915086601f830112612001578384fd5b81358181111561200f578485fd5b876020828501011115612020578485fd5b6020830194508093505050509250925092565b600060408284031215612044578081fd5b50919050565b60006040828403121561205b578081fd5b6040516040810181811067ffffffffffffffff8211171561207857fe5b604052823581526020928301359281019290925250919050565b6000602082840312156120a3578081fd5b81356001600160801b03811681146114e6578182fd5b6000602082840312156120ca578081fd5b5035919050565b6000602082840312156120e2578081fd5b813563ffffffff811681146114e6578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b039290921682526001600160801b0316602082015260400190565b6001600160a01b03929092168252602082015260400190565b90815260200190565b918252602082015260400190565b6020808252600f908201526e1b9bdd081a5b9a5d1a585b1a5e9959608a1b604082015260600190565b6020808252601290820152711b195cdcc81d1a185b881b5a5b881919589d60721b604082015260600190565b6020808252601f908201527f696e697420756e646572636f6c6c61746572616c697a65642073797374656d00604082015260600190565b60208082526013908201527234b73b30b634b2103634b8bab4b230ba34b7b760691b604082015260600190565b6020808252601a908201527f756e646572636f6c6c61746572616c697a65642073797374656d000000000000604082015260600190565b6020808252600b908201526a6e6f6f702075706461746560a81b604082015260600190565b60208082526023908201527f696e76616c6964206c69717569646174696f6e3a2073797374656d20647261696040820152621b995960ea1b606082015260800190565b6020808252601490820152731c1bdcda5d1a5bdb881a185cc81b9bc81919589d60621b604082015260600190565b6020808252601c908201527f756e646572636f6c6c61746572616c697a656420626f72726f77657200000000604082015260600190565b81516001600160801b039081168252602092830151169181019190915260400190565b6001600160801b0391909116815260200190565b6001600160801b0392831681529116602082015260400190565b6001600160801b038581168252841660208201526060604082018190528101829052600082846080840137818301608090810191909152601f909201601f191601019392505050565b63ffffffff9190911681526020019056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122015b3e8ab8a139cd1afde122a984d919cb764a65583e5c0b19a0a760e59710e5e64736f6c63430007060033";

export class LenderTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    collateral_: string,
    nusd: string,
    ethusdOracle_: string,
    oraclePoolFee_: BigNumberish,
    oraclePeriod_: BigNumberish,
    fee_: BigNumberish,
    minDebt_: BigNumberish,
    minBCR_: BigNumberish,
    minLCR_: BigNumberish,
    pool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LenderTest> {
    return super.deploy(
      collateral_,
      nusd,
      ethusdOracle_,
      oraclePoolFee_,
      oraclePeriod_,
      fee_,
      minDebt_,
      minBCR_,
      minLCR_,
      pool_,
      overrides || {}
    ) as Promise<LenderTest>;
  }
  getDeployTransaction(
    collateral_: string,
    nusd: string,
    ethusdOracle_: string,
    oraclePoolFee_: BigNumberish,
    oraclePeriod_: BigNumberish,
    fee_: BigNumberish,
    minDebt_: BigNumberish,
    minBCR_: BigNumberish,
    minLCR_: BigNumberish,
    pool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      collateral_,
      nusd,
      ethusdOracle_,
      oraclePoolFee_,
      oraclePeriod_,
      fee_,
      minDebt_,
      minBCR_,
      minLCR_,
      pool_,
      overrides || {}
    );
  }
  attach(address: string): LenderTest {
    return super.attach(address) as LenderTest;
  }
  connect(signer: Signer): LenderTest__factory {
    return super.connect(signer) as LenderTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LenderTestInterface {
    return new utils.Interface(_abi) as LenderTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LenderTest {
    return new Contract(address, _abi, signerOrProvider) as LenderTest;
  }
}
